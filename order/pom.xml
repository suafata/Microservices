<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.suafata</groupId>
	<artifactId>order</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>order</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<docker.registry.name>localhost:5000</docker.registry.name>
		<docker.repository.name>${docker.registry.name}suafata/${project.artifactId}}</docker.repository.name>
		<docker.host.address>192.168.99.1</docker.host.address>
		<docker.port>8080</docker.port>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- The Docker Maven plugin is used to create docker image with the fat jar -->
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.13.8</version>
				<configuration>
					<logDate>default</logDate>
					<autoPull>true</autoPull>
					<images>
						<!-- Microservice image holding the FAT-Jar with embedded tomcat -->
						<image>
							<!-- Alias name which can used for linking containers during runtime -->
							<alias>${docker.repository.name}:${project.version}</alias>
							<name>{project.artifactId}:${project.version}</name>

							<!-- Building the image -->
							<build>
								<cleanup>false</cleanup>
								<from>java:8-jre</from>
								<assembly>
									<descriptor>docker-assembly.xml</descriptor>
								</assembly>
								<ports>
									<port>8080</port>
								</ports>
								<cmd>
									<shell>
										java -Dspring.profiles.active="docker" /maven/order.jar server /maven/docker-config.yml
									</shell>
								</cmd>
							</build>

							<!-- Running the container -->
							<run>
								<ports>
									<port>tomcat.port:8080</port>
								</ports>
								<wait>
									<!-- ${docker.host.address} is set automatically by the plugin -->
									<url>http://${docker.host.address}:${docker.port}/order/microservice/v1/eureka/instances/order</url>
									<time>500000</time>
								</wait>
								<links>
									<link>db</link>
								</links>
								<log>
									<color>cyan</color> <prefix>TC</prefix>
								</log>
							</run>
						</image>
					</images>
				</configuration>

				<!-- Hooking into the lifecycle -->
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<groups>com.suafata.order.DockerIntegrationTest</groups>
					<systemPropertyVariables>
						<serviceUrl>http://${docker.host.address}:${docker.port}/</serviceUrl>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Finchley.SR2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>
